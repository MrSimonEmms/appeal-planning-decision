 {% extends "layouts/main.njk" %}

{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "components/appeal-details/macro.njk" import appealDetails %}
{%- from "govuk/components/file-upload/macro.njk" import govukFileUpload -%}
{%- from "moj/components/multi-file-upload/macro.njk" import mojMultiFileUpload -%}
{% from "govuk/components/details/macro.njk" import govukDetails %}

{% block beforeContent %}
  {{ govukBackLink({
    text: 'Back',
    href: backLink,
    attributes: {
      'data-cy': 'back'
    }
  }) }}
{% endblock %}

{% block pageTitle %}
  Upload the plans used to reach the decision - Appeal Questionnaire - Appeal a householder planning decision - GOV.UK
{% endblock %}

{% block content %}

  {{ govukErrorSummary({
    titleText: 'There is a problem',
    classes: not errors and 'moj-hidden',
    errorList: errorSummary
  }) }}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <form action="" method="POST" novalidate>
        <span class="govuk-caption-l"><span class="govuk-visually-hidden">Section. </span>Required documents</span>
        <h1 class="govuk-heading-l">Upload the plans used to reach the decision</h1>
        <p class="govuk-inset-text">File size should be no more than 1.21GB</p>

        {% set uploadHtml %}
          {{ govukFileUpload({
            id: 'documents',
            name: 'documents',
            classes: 'moj-multi-file-upload__input',
            label: {
              text: 'Upload a file',
              classes: 'govuk-label--m'
            },
            errorMessage: errorMessage
          }) }}

          {{govukButton({
            text: 'Upload file',
            classes: 'govuk-button--secondary moj-multi-file-upload__button'
          })}}
        {% endset %}

        {{ mojMultiFileUpload({
          uploadedFiles: {
            heading: { text: 'Files added' },
            items: uploadedFiles
          },
          uploadHtml: uploadHtml
        }) }}

        {% set acceptedFormats %}
          <ul class="govuk-list--bullets">
            <li>PDF – <strong>.pdf</strong></li>
            <li>Microsoft Word – <strong>.doc</strong> or <strong>.docx</strong></li>
            <li>TIF – <strong>.tif</strong> or <strong>.tiff</strong></li>
            <li>JPEG – <strong>.jpg</strong> or <strong>.jpeg</strong></li>
            <li>PNG – <strong>.png</strong></li>
          </ul>
        {% endset %}

        {{ govukDetails({
          summaryText: 'Accepted file formats',
          html: acceptedFormats
        }) }}

        {{ govukButton({
          text: 'Save and continue'
        }) }}
      </form>
    </div>

    {{
      appealDetails({
        appeal: appeal
      })
    }}
  </div>
{% endblock %}

{% block pageScripts %}
<script src="/assets/moj/all.js"></script>
<script
  src="https://code.jquery.com/jquery-3.5.1.min.js"
  integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
  crossorigin="anonymous"></script>
<script>
window.MOJFrontend.initAll();

function getErrorSummaryHtml(error) {
  var html = '';
  html += '<li>';
  html += '  <a href="' + error.href + '">' + error.text + '</a>';
  html += '</li>'

  return html;
}

function checkErrors(context, response) {
  const errors = $('.moj-multi-file-upload__list').find('.moj-multi-file-upload__error');

  if(!errors.length) {
    $('.govuk-error-summary__list').html('');
    $('.govuk-error-summary').addClass('moj-hidden');
  }
}

function showErrorSummary(context, file, response) {
  if (!response.error || !response.error.summary) return;

  $('.govuk-error-summary__list').append(getErrorSummaryHtml(response.error.summary[0]));

  $('.govuk-error-summary').removeClass('moj-hidden');
}

if (typeof MOJFrontend.MultiFileUpload !== 'undefined') {
  new MOJFrontend.MultiFileUpload({
    container: $('.moj-multi-file-upload'),
    uploadUrl: '/upload',
    deleteUrl: '/delete',
    uploadFileExitHook: showErrorSummary,
    fileDeleteHook: checkErrors,
  });
}
</script>
{% endblock %}
